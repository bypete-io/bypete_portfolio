---
import { getCollection } from 'astro:content';
import MarkdownPostLayout from '~/layouts/MarkdownPostLayout.astro';
import { formatBlogPosts } from '~/js/utils';

export async function getStaticPaths() {
    const blogEntries = await getCollection('posts');
    const numberOfPosts = blogEntries.length;

    const formattedPosts = formatBlogPosts(blogEntries, {
        filterOutDrafts: true,
        filterOutFuturePosts: true,
        sortByDate: true,
    });

    return formattedPosts.map((entry, i) => ({
        params: { slug: entry.slug },
        props: {
            entry,
            prevPost:
                i + 1 === numberOfPosts // If the current post is the oldest
                    ? ''
                    : blogEntries[i + 1],
            nextPost:
                i === 0 // If the current post is the newest
                    ? ''
                    : blogEntries[i - 1],
        },
    }));
}

const { entry, prevPost, nextPost } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await entry.render();
---

<MarkdownPostLayout
    frontmatter={entry.data}
    minutesRead={remarkPluginFrontmatter.minutesRead}
    {headings}
    {prevPost}
    {nextPost}
>
    <Content />
</MarkdownPostLayout>
