---
import Toast from './Toast.astro';
import Button from './ui/Button.astro';
import Link from './ui/Link.astro';
import { Icon } from 'astro-icon';
const { bg } = Astro.props;
---

<Toast {bg}>
    <div
        class="pointer-events-auto grid items-start gap-y-2 p-2 grid-areas-toast md:p-3"
        x-data="cookie"
        x-show="toastCookie"
        x-transition:enter="transition ease-out duration-150"
        x-transition:enter-start="opacity-0 "
        x-transition:enter-end="opacity-100 "
        x-transition:leave="transition ease-in duration-300"
        x-transition:leave-start="opacity-100 "
        x-transition:leave-end="opacity-0 "
        x-cloak
    >
        <div class="text-sm grid-in-message">
            <p>
                We use cookies to learn how visitors interact with our site. By
                continuing to browse you agree to the use of these cookies.
            </p>
        </div>
        <button
            type="button"
            title="hide"
            @click="freeze(false)"
            class="-mr-4 -mt-4 rounded-full bg-red-600 p-1 text-white shadow-floated grid-in-close hover:bg-red-800"
        >
            <Icon name="mdi:hide" class="h-4 w-4" />
        </button>
        <p class="flex justify-between grid-in-action">
            <Link theme="link" size="sm" href="/about/legal#cookie-policy">
                Cookie policy
            </Link>
            <Button
                type="button"
                size="sm"
                @click="accept()"
                aria-label="Dismiss"
            >
                OK, continue
            </Button>
        </p>
    </div>
</Toast>

<script>
    import Cookies from 'js-cookie';

    document.addEventListener('alpine:init', () => {
        Alpine.data('cookie', () => ({
            cookie: '',
            toastCookie: false,
            cookie_name: 'cnotice',
            freeze(freezeState) {
                this.toastCookie = freezeState;
                document.body.classList.toggle('overflow-hidden', freezeState);
                this.$dispatch('show-overlay', { visible: freezeState });
            },
            init() {
                setTimeout(() => {
                    this.cookie = Cookies.get(this.cookie_name);
                    if (!this.cookie) {
                        this.freeze(true);
                    }
                }, 6000);
            },
            accept() {
                this.freeze(false);
                Cookies.set(this.cookie_name, true, {
                    expires: 365,
                    path: '/',
                    secure: true,
                    sameSite: 'strict',
                });
            },
        }));
    });
</script>
