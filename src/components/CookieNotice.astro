---
import Toast from './ui/Toast.astro';
import Button from './ui/Button.astro';
import Link from './ui/Link.astro';
import { Icon } from 'astro-icon/components';
---

<Toast>
    <div
        class="pointer-events-auto grid items-start gap-y-fl-space-xs p-fl-space-xs grid-areas-toast"
        x-data="cookie"
        x-show="toastCookie"
        x-transition:enter="transition ease-out duration-150"
        x-transition:enter-start="opacity-0 "
        x-transition:enter-end="opacity-100 "
        x-transition:leave="transition ease-in duration-300"
        x-transition:leave-start="opacity-100 "
        x-transition:leave-end="opacity-0 "
    >
        <div class="text-fl-step--1 grid-in-message">
            <p>
                We use cookies to learn how visitors interact with our site. By
                continuing to browse you agree to the use of these cookies.
            </p>
        </div>
        <button
            type="button"
            title="hide"
            @click="freeze(false)"
            class="-mr-fl-space-s -mt-fl-space-s rounded-full bg-warning-light p-fl-space-3xs text-white shadow-floated grid-in-close hover:bg-warning-dark"
        >
            <Icon name="mdi:hide" class="h-4 w-auto" />
        </button>
        <p class="flex justify-between grid-in-action">
            <Link theme="link" size="sm" href="/about/legal#cookie-policy">
                Cookie policy
            </Link>
            <Button
                type="button"
                size="sm"
                @click="accept()"
                aria-label="Dismiss"
            >
                OK, continue
            </Button>
        </p>
    </div>
</Toast>

<script>
    import Alpine from 'alpinejs';
    import Cookies from 'js-cookie';

    document.addEventListener('alpine:init', () => {
        const isProduction = import.meta.env.MODE === 'production';
        const domain = isProduction ? import.meta.env.SITE : 'localhost';
        const isSecure = isProduction; // Set to true for production, false for localhost

        Alpine.data('cookie', () => ({
            cookie: '',
            toastCookie: false,
            cookie_name: 'cnotice',
            freeze(freezeState) {
                this.toastCookie = freezeState;
                document.body.classList.toggle('overflow-hidden', freezeState);
                this.$dispatch('show-overlay', { visible: freezeState });
            },
            init() {
                setTimeout(() => {
                    this.cookie = Cookies.get(this.cookie_name);
                    if (!this.cookie) {
                        this.freeze(true);
                    }
                }, 6000);
            },
            accept() {
                this.freeze(false);
                Cookies.set(this.cookie_name, 'true', {
                    expires: 365,
                    path: '/',
                    secure: isSecure,
                    sameSite: 'strict',
                    ...(isProduction && { domain }), // Include domain only for production
                });
            },
        }));
    });
</script>
