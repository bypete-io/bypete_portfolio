---
interface Props {
    title: string;
    url: string;
    parent?: string;
    pathname: string;
    isHeroDark: boolean;
    class?: string;
}

const {
    title,
    url,
    parent = undefined,
    pathname,
    isHeroDark,
    class: className,
} = Astro.props;
const legibility = isHeroDark
    ? ' group-data-[banner=start]:hover:text-menudark-active group-data-[banner=start]:focus:text-menudark-active group-data-[banner=start]:text-menudark'
    : '';
const activeState = isHeroDark
    ? ' data-[state=active]:ring-menudark-marker data-[state=active]:hover:text-menudark-active '
    : ' data-[state=active]:ring-menu-marker data-[state=active]:hover:text-menu-active';

const isCurrentChild = parent !== undefined && pathname.includes(parent);
---

<a
    href={url}
    class:list={[
        'flex h-full items-center rounded-full p-2 text-base/none font-medium text-menu ring-2 ring-transparent transition duration-150 hover:bg-panel hover:text-menu-active focus:bg-panel focus:text-menu-active focus:outline-none',
        className,
        legibility,
        activeState,
    ]}
    data-state={pathname === url || isCurrentChild ? 'active' : ''}>{title}</a
>
