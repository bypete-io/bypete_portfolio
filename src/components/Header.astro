---
import { Icon } from 'astro-icon/components';
import Hamburger from './Hamburger.astro';
import Navigation from './Navigation.astro';
import ThemeIcon from './ThemeIcon.astro';
const { isHeroDark = false } = Astro.props;
---

<header
    x-bind:class="{'translate-y-0 duration-0' : banner == 'freeze', 'bg-banner': banner == 'start', 'bg-banner-up shadow-banner shadow-gray-950/10': banner == 'up', '-translate-y-full ': banner == 'down' }"
    x-ref="banner"
    :data-banner="banner"
    x-data="{ banner:'start', ...stickybanner()}"
    x-init="reactOnScroll()"
    class:list={['group fixed fixed top-0 z-banner w-full py-4 duration-300']}
    @set-banner.window="banner = $event.detail"
    @freeze-banner.window="$refs.banner.classList.add('banner--freeze', $event.detail)"
    @thaw-banner.window="$refs.banner.classList.remove('banner--freeze', $event.detail)"
    @scroll.window="reactOnScroll()"
>
    <div
        class="mx-auto grid max-w-container grid-cols-2 items-center md:grid-cols-header"
    >
        <a href="/" aria-label="byPete - home">
            <Icon
                name="bypete"
                class="banner__logo h-8 w-auto transition-all md:h-10"
            />
        </a>

        <ThemeIcon isHeroDark={isHeroDark} />
        <Navigation class="justify-self-end" isHeroDark={isHeroDark} />
    </div>
</header>
<Hamburger />

<script>
    import Alpine from 'alpinejs';
    document.addEventListener('alpine:init', () => {
        Alpine.data('stickybanner', () => ({
            lastScrollTop: 0,
            reactOnScroll() {
                const ba = this.$refs.banner.clientHeight;
                const sh = Math.max(
                    document.body.scrollHeight,
                    document.body.offsetHeight,
                    document.documentElement.clientHeight,
                    document.documentElement.scrollHeight,
                    document.documentElement.offsetHeight,
                );
                const st =
                    window.pageYOffset || document.documentElement.scrollTop;
                const ch =
                    window.innerHeight || document.documentElement.clientHeight;

                // Only fix header for longer pages
                if (sh >= ch * 1.25) {
                    if (st > ch * 0.5) {
                        this.pageTop = true;
                    }

                    if (st === 0 || st <= ba) {
                        this.$data.banner = 'start';
                        this.pageTop = false;
                    } else if (st > this.$data.lastScrollTop && st >= ba) {
                        this.$data.banner = 'down';
                    } else if (st < this.$data.lastScrollTop) {
                        this.$data.banner = 'up';
                    } else {
                        this.$data.banner = 'unknown';
                    }
                }
                this.$data.lastScrollTop = st <= 0 ? 0 : st; // For Mobile or negative scrolling
            },
        }));
    });
</script>
