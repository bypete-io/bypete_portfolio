---
import Lightbox from './Lightbox.astro';

interface Asset {
    title: string;
    image: string;
    class?: string;
    caption?: string;
}

interface DataKeys {
    folder: string;
    [key: string]: Asset[] | string; // Allow for dynamic keys with specific types
}

export interface Props {
    data?: Partial<DataKeys>;
    collection: string;
    title?: string | ImageMetadata;
    caption?: string | ImageMetadata;
    class?: string | ImageMetadata;
}

const { data, collection } = Astro.props;

const imageFiles = import.meta.glob<ImageMetadata>(
    '../../assets/work/**/*.{png,webp,jpg,jpeg}',
    {
        import: 'default',
        eager: true,
    },
);

const folderFiles = Object.keys(imageFiles).filter((image) => {
    // Check if the 'image' property exists in the collection array
    const isInCollection = data[collection].some(
        (asset) => `../../${data.folder}/${asset.image}` === image,
    );

    // Return true if the condition is satisfied
    return isInCollection;
});

const imageSrcs = folderFiles.map((image) => {
    const asset = data[collection].find(
        (asset) => `../../${data.folder}/${asset.image}` === image,
    );

    if (asset) {
        // Include additional properties from collection in the imageFiles object
        return {
            ...imageFiles[image],
            title: asset.title,
            caption: asset.caption,
            class: asset.class,
        };
    }

    return imageFiles[image];
});

const gallery = 'work-' + collection;
---

{data && data[collection] && <Lightbox id={gallery} images={imageSrcs} />}
