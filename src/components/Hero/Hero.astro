---
import type { HTMLAttributes } from 'astro/types';
import GridImage from '../../components/Hero/GridImage.astro';

interface Props extends HTMLAttributes<'div'> {
    isHeroDark?: boolean;
    wrapper?: string;
    class?: string;
    bg?: string;
    legibility?: string;
    shadow?: string;
    isContained?: boolean;
    mode?: 'red' | 'blue' | 'yellow';
}

const {
    class: ClassName,
    isHeroDark,
    mode,
    wrapper,
    bg,
    legibility,
    isContained = false,
    ...rest
} = Astro.props;

const color = legibility || (isHeroDark ? 'text-white' : 'text-slate-800');
---

<div
    id="hero"
    class:list={[
        'relative h-0 w-full outline-none',
        bg ? bg : '',
        color ? color : '',
        ClassName,
        wrapper ||
            'min-h-photo pt-[var(--smheaderheight)] md:min-h-33vw md:pt-[var(--headerheight)] xl:min-h-block',
        { 'overflow-hidden': isContained },
    ]}
    {...rest}
>
    {
        mode === 'red' && (
            <>
                <GridImage {isHeroDark}>
                    <slot slot="gridleft" name="leftcontent" />
                    <slot slot="gridright" name="rightcontent" />
                </GridImage>
            </>
        )
    }

    {
        mode === 'blue' && (
            <>
                <h1>Example 2</h1>

                <p>This is blue 2.</p>
            </>
        )
    }

    {
        mode === 'yellow' && (
            <>
                <h1>Example 3</h1>

                <p>This is yellow 3.</p>
            </>
        )
    }

    <slot />
</div>
