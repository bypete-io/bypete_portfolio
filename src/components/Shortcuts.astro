---
import Button from './ui/Button.astro';
import { Icon } from 'astro-icon/components';
---

<div
    class="fixed bottom-fl-space-2xl right-fl-space-s z-shortcuts flex flex-col items-center space-y-fl-space-2xs md:right-8"
>
    <a
        id="pagetop"
        x-ref="pagetop"
        x-cloak
        :class="pageTop ? '' : 'translate-y-fl-space-xl md:translate-y-0 md:translate-x-fl-space-xl'"
        href="#top"
        aria-hidden="true"
        class="scroll flex items-center justify-center rounded-full bg-accent p-fl-space-3xs text-white transition duration-700 hover:border-black/10 hover:bg-accent-light hover:shadow-inset focus:outline-none"
    >
        <Icon
            name="lucide:arrow-up-to-line"
            class="h-fl-space-s w-fl-space-s"
        />
    </a>

    <Button
        class="group relative h-fl-space-xl w-fl-space-xl flex-col justify-center shadow-floated md:hidden"
        name="hamburger"
        type="button"
        x-data="hamburger"
        x-ref="button"
        @click="toggle()"
    >
        <span
            :class="smNav ? 'rotate-45 translate-y-fl-space-2xs' : ''"
            class="ease my-0.5 h-1 w-6 transform rounded-full bg-white transition duration-300"
        ></span>
        <span
            :class="smNav ? 'opacity-0' : ''"
            class="ease my-0.5 h-1 w-6 transform rounded-full bg-white transition duration-300"
        ></span>
        <span
            :class="smNav ? '-rotate-45 -translate-y-fl-space-2xs' : ''"
            class="ease my-0.5 h-1 w-6 transform rounded-full bg-white transition duration-300"
        ></span>
    </Button>
</div>

<script>
    import Alpine from 'alpinejs';
    document.addEventListener('alpine:init', () => {
        Alpine.data('hamburger', () => ({
            freeze(freezeState) {
                document.body.classList.toggle('overflow-hidden', freezeState);
            },
            toggle() {
                const themeMeta = document.querySelector(
                    'meta[name="theme-color"]',
                );
                const cache =
                    this.$store.cache.theme ||
                    themeMeta?.getAttribute('content');
                this.$store.cache.theme = cache;
                this.smNav = !this.smNav;
                themeMeta?.setAttribute(
                    'content',
                    this.smNav ? '#ffd200' : cache,
                );
                this.freeze(this.smNav);
            },
        }));
    });
</script>
