---
import { Icon } from 'astro-icon/components';
import Button from './ui/Button.astro';
---

<div
    class="fixed bottom-fl-space-m right-fl-space-m z-shortcuts flex flex-col items-center space-y-fl-space-2xs"
>
    <a
        id="pageTop"
        href="#top"
        aria-hidden="true"
        class="scroll translate-y-fl-space-2xl items-center justify-center rounded-full bg-accent p-fl-space-2xs text-white shadow-floated hover:border-black/10 hover:bg-accent-light focus:outline-none"
    >
        <Icon
            name="lucide:arrow-up-to-line"
            class="h-fl-space-m w-fl-space-m"
        />
    </a>

    <button
        class="group relative flex h-fl-space-2xl w-fl-space-2xl items-center justify-center rounded-full bg-accent p-0 shadow-floated hover:bg-accent-light focus:bg-accent-light lg:hidden"
        name="hamburger"
        type="button"
        aria-label="Mobile menu"
        :aria-label="isMobileNavOpen ? 'Close main menu' : 'Mobile menu'"
        :aria-expanded="isMobileNavOpen"
        x-data="hamburger"
        x-ref="button"
        x-on:click.prevent="toggle()"
    >
        <div class="grid justify-items-center gap-1">
            <span
                :class="isMobileNavOpen ? '-rotate-45 translate-y-2' : ''"
                class="h-1 w-5 rounded-full bg-white transition duration-1000"
            ></span>
            <span
                :class="isMobileNavOpen ? 'opacity-0' : ''"
                class="h-1 w-6 rounded-full bg-white transition duration-1000"
            ></span>
            <span
                :class="isMobileNavOpen ? 'rotate-45 -translate-y-2 ' : ''"
                class="h-1 w-5 rounded-full bg-white transition duration-1000"
            ></span>
        </div>
    </button>
</div>

<script>
    import Alpine from 'alpinejs';
    import {
        animate,
        scroll,
        timeline,
        ScrollOffset,
        stagger,
        inView,
    } from 'motion';
    import Lenis from '@studio-freight/lenis';
    const lenis = new Lenis();

    function raf(time) {
        lenis.raf(time);
        requestAnimationFrame(raf);
    }

    requestAnimationFrame(raf);
    const page = document.documentElement;
    const body = document.body;
    const wrapper = document.getElementById('wrapper');
    const wrapperContent = document.getElementById('wrapperContent');
    const mobileNavigation = document.getElementById('mobileNavigation');

    // Get viewport height
    const vh = window.innerHeight;

    // Get page height
    const bh = Math.max(
        document.body.scrollHeight,
        document.body.offsetHeight,
        document.documentElement.clientHeight,
        document.documentElement.scrollHeight,
        document.documentElement.offsetHeight,
    );

    const pageTop = document.getElementById('pageTop');

    pageTop &&
        pageTop.addEventListener('click', (e) => {
            e.preventDefault();
            history.pushState(
                '',
                document.title,
                window.location.pathname + window.location.search,
            );
            lenis.scrollTo('#top');
        });

    let animationInProgress = false;
    let visible = false;
    let throttleTimer = null;
    const throttleInterval = 300;

    const handlePageTop = () => {
        if (!throttleTimer) {
            throttleTimer = setTimeout(() => {
                throttleTimer = null;
                if (animationInProgress) {
                    return;
                }
                if (page.scrollTop > vh && !visible) {
                    showPageTop();
                }
                if (page.scrollTop <= vh && visible) {
                    hidePageTop();
                }
            }, throttleInterval);
        }
    };

    const hidePageTop = () => {
        animationInProgress = true;
        visible = false;
        animate(
            pageTop,
            {
                opacity: 1,
                transform: ['translateY(var(--space-2xl)) scale(0.25)'],
            },
            { easing: 'ease-in', duration: 0.25 },
        ).finished.then(() => {
            animationInProgress = false;
        });
    };

    const showPageTop = () => {
        animationInProgress = true;
        visible = true;
        animate(
            pageTop,
            {
                opacity: 1,
                transform: ['translateX(0)'],
            },
            { easing: 'ease-in', duration: 0.25 },
        ).finished.then(() => {
            animationInProgress = false;
        });
    };

    // Add scroll event listener
    window.addEventListener('scroll', handlePageTop);

    const hello = (scrollCache, viewHeight, viewWidth) => {
        document.documentElement.style.overflow = `hidden`;
        body.style.overflow = `hidden`;
        wrapper.style.cssText = `overflow: hidden; height: ${viewHeight}px;`;
        wrapperContent.style.top = `-${scrollCache}px`;
        wrapperContent.style.postion = `relative`;

        const sequence = [
            [
                wrapper,
                {
                    transform: `${viewWidth <= 768 ? 'translateX(-85vw)' : 'translateX(-60vw)'}`,
                    height: `${viewHeight}px`,
                },
                {},
            ],
            [
                mobileNavigation,
                {
                    opacity: 1,
                    transform: [
                        'translateX(calc(-1 * var(--space-3xl))) scale(.75)',
                        'translateX(0px) scale(1)',
                    ],
                },
                {
                    at: '<',
                },
            ],
        ];
        timeline(sequence, { duration: 0.5, easing: [0.22, 0.03, 0.26, 1] });
    };

    const goodbye = async (scrollCache) => {
        const sequence = [
            [mobileNavigation, { opacity: 0 }, { duration: 0.25 }],
            [
                wrapper,
                {
                    transform: 'translateX(0px)',
                },
                {},
            ],
        ];

        await timeline(sequence, {
            duration: 1,
            easing: [0.22, 0.03, 0.26, 1],
        }).finished;

        wrapperContent.style.top = '0px';
        wrapper.style.cssText = `transform: none; height: 100%;`;
        document.documentElement.scrollTop = scrollCache;
        document.documentElement.style.cssText = '';
        body.style.cssText = '';
    };

    document.addEventListener('alpine:init', () => {
        Alpine.data('hamburger', () => ({
            freeze(freezeState) {
                document.body.classList.toggle('overflow-hidden', freezeState);
            },
            scrollPos: undefined,
            viewHeight: undefined,
            toggle() {
                this.isMobileNavOpen = !this.isMobileNavOpen;

                const themeMeta = document.querySelector(
                    'meta[name="theme-color"]',
                );
                const cache =
                    this.$store.cache.theme ||
                    themeMeta?.getAttribute('content');
                this.$store.cache.theme = cache;

                themeMeta?.setAttribute(
                    'content',
                    this.smNav ? '#ffd200' : cache,
                );
            },

            init() {
                this.$watch('isMobileNavOpen', (value, oldValue) => {
                    if (oldValue != true) {
                        this.viewHeight =
                            window.innerHeight ||
                            document.documentElement.clientHeight;
                        this.viewWidth =
                            window.innerWidth ||
                            document.documentElement.clientWidth;
                        this.scrollPos = document.documentElement.scrollTop;
                        this.$store.cache.scrollHeight = this.scrollPos;
                        hello(this.scrollPos, this.viewHeight, this.viewWidth);
                    } else {
                        goodbye(this.$store.cache.scrollHeight);
                        // this.isMobileNavOpen = false;
                    }
                });
            },
        }));
    });
</script>
